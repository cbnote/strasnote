// Copyright (c) Strasnote
// Licensed under https://strasnote.com/licence

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_CreateAsync.IdentityResult_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_DeleteAsync.IdentityResult_Success_Returned_When_Delete_Success~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_FindByEmailAsync.UserEntity_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_FindByIdAsync.UserEntity_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_FindByNameAsync.RetrieveByUsernameAsync_CreateAsync_Is_Called_Once~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_FindByNameAsync.UserEntity_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetEmailAsync.ArgumentNullException_Thrown_When_UserEntity_Null~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetEmailAsync.Email_String_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetEmailConfirmedAsync.ArgumentNullException_Thrown_When_UserEntity_Null~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetEmailConfirmedAsync.EmailConfirmed_bool_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetNormalizedEmailAsync.Normalized_Email_String_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetNormalizedUserNameAsync.Normalized_UserName_String_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetPasswordHashAsync.ArgumentNullException_Thrown_When_UserEntity_Null~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetPasswordHashAsync.PasswordHash_String_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetUserIdAsync.User_Id_String_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_GetUserNameAsync.UserName_String_Returned_On_Successful_Call~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_HasPasswordAsync.HasPassword_Bool_Returns_False_When_PasswordHash_Has_A_Value~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_HasPasswordAsync.HasPassword_Bool_Returns_True_When_PasswordHash_Has_A_Value~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetEmailAsync.ArgumentNullException_Thrown_When_UserEntity_Null~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetEmailAsync.Email_On_UserEntity_Is_Set_To_Email_Arg~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetEmailConfirmedAsync.ArgumentNullException_Thrown_When_UserEntity_Null~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetEmailConfirmedAsync.Email_On_UserEntity_Is_Set_To_Email_Arg~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetNormalizedEmailAsync.NormalizedEmail_On_UserEntity_Is_Set_To_NormalizedEmail_Arg~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetNormalizedUserNameAsync.NormalizedUserName_On_UserEntity_Is_Set_To_NormalizedName_Arg~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetPasswordHashAsync.ArgumentNullException_Thrown_When_UserEntity_Null~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetPasswordHashAsync.PasswordHash_On_UserEntity_Is_Set_To_PasswordHash_Arg~System.Threading.Tasks.Task")]
[assembly: SuppressMessage("Design", "RCS1090:Add call to 'ConfigureAwait' (or vice versa).", Justification = "<Pending>", Scope = "member", Target = "~M:Tests.Strasnote.Auth.Data.Tests_SetUserNameAsync.UserName_On_UserEntity_Is_Set_To_UserName_Arg~System.Threading.Tasks.Task")]
